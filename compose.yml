services:
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./docker/otel-collector-config.yaml:/etc/otelcol/config.yaml:ro
    healthcheck:
      test: [ "CMD", "/otelcol", "validate", "--config=/etc/otelcol/config.yaml" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "4318:4318"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command:
      - redis-server
      - --requirepass
      - redispassword
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'redispassword', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data

  accentra-db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: accentra
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d accentra']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - ./docker/init:/docker-entrypoint-initdb.d:ro
      - accentra-db-data:/var/lib/postgresql/data

  accentra:
    build:
      context: ./
    depends_on:
      redis:
        condition: service_healthy
      accentra-db:
        condition: service_healthy
    environment:
      POSTGRES_URL: postgresql://accentra_app_user:app-user-password@accentra-db:5432/accentra
      ALEMBIC_DATABASE_URL: postgresql://accentra_alembic_user:alembic-user-password@accentra-db:5432/accentra
      REDIS_URL: redis://:redispassword@redis:6379/2
    ports:
      - '8000:8000'


volumes:
  redis-data:
  accentra-db-data:
